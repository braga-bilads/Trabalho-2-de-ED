digraph "FazArvdeBitMap"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [label="FazArvdeBitMap",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Dado um bitmap contendo a arvore serializada em pre-ordem, retorna a mesma desserializada para uso no..."];
  Node1 -> Node2 [color="steelblue1",style="solid"];
  Node2 [label="IniciaBitIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_bitindex_8c.html#a8e4f2606d9ca79f193f8a7dc3d890455",tooltip="Inicia um Bitmap indexado, dado um bitmap comum."];
  Node1 -> Node3 [color="steelblue1",style="solid"];
  Node3 [label="LiberaBitIndx",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_bitindex_8c.html#af0d17881c29ba316cfa620283c7b7e7b",tooltip="Libera a estrutura de BitIndexado, sem liberar o bitmap em que foi baseado."];
  Node1 -> Node4 [color="steelblue1",style="solid"];
  Node4 [label="RecursividadeCriadora",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_arvore_8c.html#a87505f6fe3718fc93dc8f907127a6a6b",tooltip="Funcao recursiva auxiliar de FazArvdeBitMap. Nessa funcao, lemos o bitmap indexado contendo a arvore ..."];
  Node4 -> Node5 [color="steelblue1",style="solid"];
  Node5 [label="ArvCria",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_arvore_8c.html#ab523d769f5fa825ecfed60ccbf80735f",tooltip="Função para criar Arvore, aqui podemos adicionar um caractere e seu peso correspodente na contagem do..."];
  Node5 -> Node6 [color="steelblue1",style="solid"];
  Node6 [label="assert",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bitmap_8c.html#ae6321531d73ebab0e0f1081a903be53c",tooltip=" "];
  Node4 -> Node7 [color="steelblue1",style="solid"];
  Node7 [label="ArvCriaVazia",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_arvore_8c.html#a85910c70213c534fa1f5b61056e4dd4c",tooltip="Cria arv Vazia."];
  Node4 -> Node8 [color="steelblue1",style="solid"];
  Node8 [label="LeCaractere",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_bitindex_8c.html#a0593341cccbcde30b5c85c832e1d4aa2",tooltip="Retorna os proximos 8 bits do bitmap, concatenados em um char."];
  Node8 -> Node9 [color="steelblue1",style="solid"];
  Node9 [label="bitmapAppendLeastSignificantBit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bitmap_8c.html#a8bee243b51ff8daf8cf577d11e7e735c",tooltip=" "];
  Node9 -> Node6 [color="steelblue1",style="solid"];
  Node8 -> Node10 [color="steelblue1",style="solid"];
  Node10 [label="bitmapGetContents",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bitmap_8c.html#a35de4ff0d4746abe845d9977cd622120",tooltip=" "];
  Node8 -> Node11 [color="steelblue1",style="solid"];
  Node11 [label="bitmapInit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bitmap_8c.html#a6fe05cb2e9889f347653f98edac7a114",tooltip=" "];
  Node11 -> Node6 [color="steelblue1",style="solid"];
  Node8 -> Node12 [color="steelblue1",style="solid"];
  Node12 [label="bitmapLibera",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bitmap_8c.html#a08def9dc3e8ae0e4d83a0039d770205c",tooltip=" "];
  Node8 -> Node13 [color="steelblue1",style="solid"];
  Node13 [label="ProxBit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_bitindex_8c.html#a3d10e37dd981c668b0db91cebc255246",tooltip="Retorna o proximo bit do bitmap, caso omesmo fosse tratado como uma pilha."];
  Node13 -> Node14 [color="steelblue1",style="solid"];
  Node14 [label="bitmapGetBit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bitmap_8c.html#ac67802da30c1b2aa2fd983818b11d435",tooltip=" "];
  Node14 -> Node6 [color="steelblue1",style="solid"];
  Node4 -> Node13 [color="steelblue1",style="solid"];
  Node4 -> Node4 [color="steelblue1",style="solid"];
}
